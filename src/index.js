import { Client, LocalAuth } from "whatsapp-web.js";
import qrcode from "qrcode-terminal";
import dotenv from "dotenv";
import OpenAI from "openai";

dotenv.config();

const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });

// –ù–æ–º–µ—Ä–∞ —Å –ø–æ–¥–ø–∏—Å–∫–æ–π (–Ω–µ —É–¥–∞–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è)
const premiumNumbers = (process.env.ALLOWED_NUMBERS || "").split(",");

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è WhatsApp –∫–ª–∏–µ–Ω—Ç–∞
const client = new Client({
  authStrategy: new LocalAuth(),
  puppeteer: { headless: true }
});

client.on("qr", qr => {
  qrcode.generate(qr, { small: true });
});

client.on("ready", () => {
  console.log("‚úÖ WhatsApp Bot –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!");
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–µ–∫–ª–∞–º—É
async function isSpam(text) {
  try {
    const response = await openai.chat.completions.create({
      model: "gpt-4o-mini",
      messages: [
        { role: "system", content: "–¢—ã —Ñ–∏–ª—å—Ç—Ä. –û–ø—Ä–µ–¥–µ–ª–∏, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ä–µ–∫–ª–∞–º–Ω—ã–º." },
        { role: "user", content: text }
      ],
      max_tokens: 5
    });
    const result = response.choices[0].message.content.toLowerCase();
    return result.includes("–¥–∞"); // –±–æ—Ç –æ—Ç–≤–µ—Ç–∏—Ç "–¥–∞"/"–Ω–µ—Ç"
  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ OpenAI:", err.message);
    return false;
  }
}

client.on("message", async msg => {
  const chat = await msg.getChat();

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ –≥—Ä—É–ø–ø–æ–≤—ã–µ —á–∞—Ç—ã
  if (chat.isGroup) {
    const sender = msg.from.split("@")[0];

    if (premiumNumbers.includes(sender)) {
      console.log(`üöÄ –ü—Ä–µ–º–∏—É–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${sender}, —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª—è–µ—Ç—Å—è.`);
      return;
    }

    if (await isSpam(msg.body)) {
      await msg.delete(true);
      console.log(`‚ùå –£–¥–∞–ª–µ–Ω–æ —Ä–µ–∫–ª–∞–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç ${sender}`);
    }
  }
});

// –í –ª–∏—á–∫—É: –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä –≤ –ø—Ä–µ–º–∏—É–º
client.on("message", async msg => {
  if (!msg.fromMe && !msg.isGroup) {
    if (msg.body.startsWith("premium")) {
      const [_, number, untilDate] = msg.body.split(" ");
      if (number) {
        premiumNumbers.push(number);
        console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –ø—Ä–µ–º–∏—É–º-–Ω–æ–º–µ—Ä: ${number} –¥–æ ${untilDate || "‚àû"}`);
        msg.reply(`–ù–æ–º–µ—Ä ${number} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –ø—Ä–µ–º–∏—É–º –¥–æ ${untilDate || "‚àû"}`);
      }
    }
  }
});

client.initialize();
